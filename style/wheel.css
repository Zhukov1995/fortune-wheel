@font-face {
  font-family: 'Hastadaya';
  src: url('../fonts/Hastadaya.woff') format('woff');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'TT Norms';
  src: url('../fonts/TTNorms-Bold.woff') format('woff');
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}


.wheel__wrapper {
  width: 703px;
  height: 703px;
  position: relative;
}

.wheel {
  width: 703px;
  height: 703px;
  position: absolute;
}

.wheel__light {
  width: 630px;
  height: 630px;
  top: 39px;
  left: 36px;
  position: absolute;
}


/* делаем везде так, чтобы свойства width и height задавали не размеры контента, а размеры блока */
* {
    box-sizing: border-box;
  }
 
  body {
    font-family: 'TT Norms';
    position: relative;
    margin: 0;
  }
  
  /* общий блок для всех элементов */
  .deal-wheel {
    display: none;
    /* задаём переменные блока */
    /* размеры колеса */
    position: absolute;
    padding-top: -160px;
    /* min-width: 500px; */
    padding-left: 85px;
    margin-right: 55px;
    padding-bottom: 30px;
    /* margin: 0 auto; */
    transform: rotate(90deg);
    --size: clamp(250px, 80vmin, 540.17px);
    /* настройки яркости и заливки фона секторов */
    --lg-hs: 0 3%;
    --lg-stop: 50%;
    --lg: linear-gradient(
        hsl(var(--lg-hs) 0%) 0 var(--lg-stop),
        hsl(var(--lg-hs) 20%) var(--lg-stop) 100%
      );
    /* добавляем позиционирование относительно других элементов */
    position: relative;
    /* подключаем сетку */
    display: grid;
    grid-gap: calc(var(--size) / 20);
    /* выравниваем содержимое блока по центру */
    align-items: center;
    /* задаём имена областей внутри сетки */
    grid-template-areas:
      "spinner"
      "trigger";
    /* устанавливаем размер шрифта */
    font-size: calc(var(--size) / 22);
  }
  
  /* всё, что относится ко внутренним элементам главного блока, будет находиться в области сетки с названием spinner */
  .deal-wheel > * {
    grid-area: spinner;
  }
  
  /* сам блок и кнопка будут находиться в области сетки с названием trigger и будут выровнены по центру */
  .deal-wheel .btn-spin {
    grid-area: trigger;
    justify-self: center;
  }
  
  /* сектор колеса */
  .spinner {
   
    /* добавляем относительное позиционирование */
    position: relative;
    /* подключаем сетку */
    display: grid;
    /* выравниваем всё по центру */
    align-items: center;
    /* добавляем элемент в сетку */
    grid-template-areas: "spinner";
    /* устанавливаем размеры */
    width: var(--size);
    height: var(--size);
    /* поворачиваем элемент  */
    transform: rotate(calc(var(--rotate, 25) * 1deg));
    /* рисуем круглую обводку, а всё, что не поместится, — будет скрыто за кругом */
    border-radius: 50%;
    border: 3px solid #FF6DF9;
  }
  
  /* всё, что внутри этого блока, будет находиться в области сетки с названием spinner */
  .spinner * {
    grid-area: spinner;
  }
  
  /* текст на секторах */
  .prize {
    /* включаем «гибкую» вёрстку */
    display: flex;
    align-items: center;
    /* задаём отступы от краёв блока */
    padding: 0 calc(var(--size) / 6) 0 calc(var(--size) / 60);
    
    font-size: 20px;
    /* устанавливаем размеры */
    width: 50%;
    height: 50%;
    /* устанавливаем координаты, относительно которых будем вращать текст */
    transform-origin: center right;
    /* поворачиваем текст */
    transform: rotate(var(--rotate));
    /* запрещаем пользователю выделять мышкой текст на секторах */
    user-select: none;
  }
  
  /* язычок */
  .ticker {
    /* добавляем относительное позиционирование */
    position: relative;
    /* устанавливаем размеры */
    left: calc(var(--size) / -15);
    width: calc(var(--size) / 10);
    height: calc(var(--size) / 20);
    /* фон язычка */
    background: var(--lg);
    /* делаем так, чтобы язычок был выше колеса */
    z-index: 1;
    /* форма язычка */
    clip-path: polygon(0% 0%, 100% 50%, 0% 100%, 0% 50%);
    /* устанавливаем точку, относительно которой будет вращаться язычок при движении колеса */
    transform-origin: center left;
  }
  
  /* кнопка запуска колеса */
  .btn-spin {
    color: white;
    border: none;
    position: absolute;
    width: 400px;
    height: 79px;
    margin-right: -150px;
    margin-bottom: 1790px;
    transform: rotate(-90deg);
    background: #F329A1;
    /* берём размер шрифта такой же, как в колесе */
    font-size: 20px;
    /* добавляем отступы от текста внутри кнопки */
    padding: 0.9rem 2rem 1rem;
    /* меняем внешний вид курсора над кнопкой на руку*/
    cursor: pointer;
    clip-path: polygon(20% 0%, 95% 0, 100% 23%, 100% 100%, 80% 100%, 5% 100%, 0 76%, 0 0);
  }

  
  .text {
    font-size: 17px;
    text-shadow: 0px 2px 2px rgba(0, 0, 0, 0.25);
    max-width: 180px;
    
  }

  ul li:nth-child(2n) {
    color: #B255FB !important;
  }

  ul li:nth-child(1n) {
    color: white;
  }

  

  .wheel__center__1 {
      position: absolute;
      z-index: 3;
      margin-top: 225px;
      margin-left: 225px;
  }

  .wheel__center__2 {
    position: absolute;
      z-index: 3;
      margin-top: 236px;
      margin-left: 236px;
  }

.wheel__center__text {
  font-family: 'Hastadaya';
  font-style: normal;
  font-weight: 400;
  font-size: 55px;
  position: absolute;
  z-index: 5;
  color: #B255FB;
  margin-top: 316px;
  margin-left: 316px;
}

  
  /* если кнопка нажата и неактивна */
  .btn-spin:disabled {
    /* меняем внешний вид курсора */
    cursor: progress;
    /* делаем кнопку полупрозрачной */
    opacity: 0.25;
  }
  
  /* анимация вращения */
  .is-spinning .spinner {
    transition: transform 8s cubic-bezier(0.1, -0.01, 0, 1);
  }
  
  /* анимация движения язычка */
  .is-spinning .ticker {
            animation: tick 700ms cubic-bezier(0.34, 1.56, 0.64, 1);
  }
  
  
  /* эффект, когда колесо задевает язычок при вращении */
  @keyframes tick {
    40% {
      /* чуть поворачиваем язычок наверх в середине анимации */
      transform: rotate(-12deg);
    }
  }

  
  
  /* анимируем выпавший сектор */
  .prize.selected .text {
    /* делаем текст белым */
    color: white;
    /* настраиваем длительность анимации */
    animation: selected 800ms ease;
  }
  
  /* настраиваем анимацию текста на выпавшем секторе по кадрам */
  @keyframes selected {
    /* что происходит на 25% от начала анимации */
    25% {
      /* увеличиваем текст в 1,25 раза */
      transform: scale(1.25);
      /* добавляем тексту тень */
      text-shadow: 1vmin 1vmin 0 hsla(0 0% 0% / 0.1);
    }
    40% {
      transform: scale(0.92);
      text-shadow: 0 0 0 hsla(0 0% 0% / 0.2);
    }
    60% {
      transform: scale(1.02);
      text-shadow: 0.5vmin 0.5vmin 0 hsla(0 0% 0% / 0.1);
    }
    75% {
      transform: scale(0.98);
    }
    85% {
      transform: scale(1);
    }
  }

  @media(min-width: 1600px) {
    .wheel__wrapper {
      margin-top: 50px;
    }
  }








  